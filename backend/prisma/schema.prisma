// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  contacts   Contact[] @relation("clientList")
  ownContact Contact   @relation("ownClient", fields: [ownContactId], references: [id], onDelete: Cascade)

  ownContactId String   @unique
  email        String   @unique
  password     String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("users")
}

model Contact {
  id      String  @id @default(uuid())
  user    User?   @relation("clientList", fields: [userId], references: [id])
  ownUser User?   @relation("ownClient")
  emails  Email[]
  phones  Phone[]

  userId    String?
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("contacts")
}

model Email {
  id         String     @id @default(uuid())
  contact    Contact    @relation(fields: [contactId], references: [id], onDelete: Cascade)
  connection Connection @relation(fields: [connectionId], references: [id])

  contactId    String
  connectionId String

  @@unique([contactId, connectionId])
  @@map("emails")
}

model Phone {
  id         String     @id @default(uuid())
  contact    Contact    @relation(fields: [contactId], references: [id], onDelete: Cascade)
  connection Connection @relation(fields: [connectionId], references: [id])

  contactId    String
  connectionId String

  @@unique([contactId, connectionId])
  @@map("phones")
}

model Connection {
  id      String  @id @default(uuid())
  emails  Email[]
  numbers Phone[]

  contact String @unique

  @@map("connections")
}
